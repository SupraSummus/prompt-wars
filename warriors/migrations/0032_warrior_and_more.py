# Generated by Django 4.2.16 on 2024-09-22 22:07

import uuid

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('warriors', '0031_rename_warrior_warrioruserpermission_warrior_arena'),
    ]

    operations = [
        # forgotten name change in 0031
        migrations.RemoveConstraint(
            model_name='warrioruserpermission',
            name='warrior_user_unique',
        ),
        migrations.AddConstraint(
            model_name='warrioruserpermission',
            constraint=models.UniqueConstraint(fields=('warrior_arena', 'user'), name='warrior_arena_user_unique'),
        ),

        # index name on (warrior_arena, user) is not refreshed automatically and will clash with (warrior, user)
        migrations.RunSQL(
            sql=(
                'ALTER INDEX warriors_warrioruserpermission_warrior_id_de8fb878 '
                'RENAME TO warriors_warrioruserpermission_warrior_arena_id_de8fb878'
            ),
        ),
        # the same for warriors_warrior_created_by_id_5f3a982f
        migrations.RunSQL(
            sql=(
                'ALTER INDEX warriors_warrior_created_by_id_5f3a982f '
                'RENAME TO warriors_warriorarena_created_by_id_5f3a982f'
            ),
        ),

        migrations.AlterField(
            model_name='warrioruserpermission',
            name='warrior_arena',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='warriors.warriorarena'),
        ),

        migrations.CreateModel(
            name='Warrior',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('body', models.TextField(max_length=1000)),
                ('body_sha_256', models.BinaryField(max_length=32, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(blank=True, max_length=40)),
                ('author_name', models.CharField(blank=True, max_length=40)),
                ('moderation_date', models.DateTimeField(blank=True, null=True)),
                ('moderation_passed', models.BooleanField(null=True)),
                ('moderation_model', models.CharField(blank=True, max_length=100)),
                ('public_battle_results', models.BooleanField(default=False, help_text='Indicates whether battle results should be public for this warrior.')),
            ],
            options={
                'ordering': ('id',),
            },
        ),

        migrations.AddField(
            model_name='warrioruserpermission',
            name='warrior',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='warriors.warrior'),
        ),
        migrations.AddConstraint(
            model_name='warrioruserpermission',
            constraint=models.UniqueConstraint(fields=('warrior', 'user'), name='warrior_user_unique'),
        ),

        migrations.AddField(
            model_name='warrior',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='warrior',
            name='users',
            field=models.ManyToManyField(related_name='+', through='warriors.WarriorUserPermission', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='warrior',
            constraint=models.CheckConstraint(check=models.Q(('body_sha_256', models.Func(models.Func(models.F('body'), models.Value('utf-8'), function='convert_to'), function='sha256'))), name='warrior_body_sha_256'),
        ),

        migrations.AddField(
            model_name='warriorarena',
            name='warrior',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='warriors.warrior'),
        ),
    ]
